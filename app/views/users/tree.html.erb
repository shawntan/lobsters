<%= javascript_include_tag "jit"%>
<style>
#usertree {
    position:relative;
    width:880px;
    height:550px;
    margin:auto;
	overflow:hidden;
	background-color: #444;
}
</style>
<script lang="javascript">
	function initgraph(){
		var users = <%= @tree.to_json.html_safe %>;
		var rgraph = new $jit.RGraph({  
			//Where to append the visualization  
			injectInto: 'usertree',  
			//Optional: create a background canvas that plots  
			//concentric circles.  
			background: {
				CanvasStyles: {  
					strokeStyle: '#555'  
				}  
			},  
			//Add navigation capabilities:  
			//zooming by scrolling and panning.  
			Navigation: {  
				enable: true,  
				panning: true,  
				zooming: 10  
			},  
			//Set Node and Edge styles.  
			Node: {  
				color: '#ddeeff'  
			},  

			Edge: {  
				color: '#C17878',  
				lineWidth:1.5  
			},  

			onBeforeCompute: function(node){  
				//Log.write("centering " + node.name + "...");
				//Add the relation list in the right column.  
				//This list is taken from the data property of each JSON node.  
				$jit.id('inner-details').innerHTML = node.name;  
			},  

			//Add the name of the node in the correponding label  
			//and a click handler to move the graph.  
			//This method is called once, on label creation.  
			onCreateLabel: function(domElement, node){  
				domElement.innerHTML = node.name;  
				domElement.onclick = function(){  
					rgraph.onClick(node.id, {  
						onComplete: function() {  
							Log.write("done");  
						}  
					});  
				};  
			},  
			//Change some label dom properties.  
			//This method is called each time a label is plotted.  
			onPlaceLabel: function(domElement, node){  
				var style = domElement.style;  
				style.display = '';  
				style.cursor = 'pointer';  

				if (node._depth <= 1) {  
					style.fontSize = "0.8em";  
					style.color = "#ccc";  

					} else if(node._depth == 2){  
					style.fontSize = "0.7em";  
					style.color = "#494949";  

					} else {  
					style.display = 'none';  
				}  

				var left = parseInt(style.left);  
				var w = domElement.offsetWidth;  
				style.left = (left - w / 2) + 'px';  
			}  
		});

		rgraph.loadJSON(users);  
		//trigger small animation  
		rgraph.graph.eachNode(function(n) { 
			console.log(n);
		  var pos = n.getPos();  
		  pos.setc(-200, -200);  
		});  
		rgraph.compute('end');  
		rgraph.fx.animate({  
		  modes:['polar'],  
		  duration: 2000  
		});  

	}
	var _load = window.onload;
	window.onload = function() {
		if(_load) _load();
		initgraph();
	};
</script>

<div class="box wide">

  <strong>Users</strong>
  <p>
  <% prev_level = 0 %>
  <% @tree.each do |u| %>
    <% if u[:level] > prev_level %>
      <ul class="<%= u[:level] == 1 ? "root" : "user_tree" %>">
    <% elsif u[:level] < prev_level %>
      <% (prev_level - u[:level]).times do %>
        </ul>
      <% end %>
    <% else %>
      </li>
    <% end %>

    <li><a href="/u/<%= u[:username] %>"><%= u[:username] %></a>
      (<%= u[:karma] %>)
      <% if u[:is_admin] %>
        (administrator)
      <% elsif u[:is_moderator] %>
        (moderator)
      <% end %>

    <% prev_level = u[:level] %>
  <% end %>
  <% prev_level.times do %>
    </ul>
  <% end %>
</div>
